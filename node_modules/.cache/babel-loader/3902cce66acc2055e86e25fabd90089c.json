{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/babel-loader/lib/index.js!/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/contoh/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/src/views/Login.vue","mtime":1554002966000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport GetAllUser from '../components/GetAllUser.vue';\nimport ax from '../services/ApiService';\nexport default {\n  components: {\n    'get-all-user': GetAllUser\n  },\n  data: function data() {\n    return {\n      // username: \"bgsbla33333@gmail.com\",\n      password: 'bagaskarala',\n      loading: false,\n      email: {\n        admin: 'bgsbla33333@gmail.com',\n        staff: 'bagaskara_staff@gmail.com'\n      },\n      selectedUser: 'bgsbla33333@gmail.com',\n      errorMessage: ''\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['jwt', 'loggedIn']), {\n    username: {\n      get: function get() {\n        return this.selectedUser;\n      },\n      set: function set(val) {\n        this.selectedUser = val;\n      }\n    }\n  }),\n  methods: _objectSpread({}, mapActions(['fetchJWT', 'fetchProfile', 'removeAuth']), {\n    onChange: function onChange(event) {\n      console.log('e target', event.target.value);\n      console.log('this name', this.username);\n    },\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var responseJWT, responseProfile;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('logging in');\n\n                if (!(this.username == '' || this.password == '')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                alert('isi username dan password dahulu');\n                return _context.abrupt(\"return\", false);\n\n              case 4:\n                this.loading = true; //fetch JWT\n\n                _context.next = 7;\n                return this.fetchJWT({\n                  username: this.username,\n                  password: this.password\n                });\n\n              case 7:\n                responseJWT = _context.sent;\n\n                if (!(responseJWT != null)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                if (!(responseJWT.status == 200)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 12;\n                return this.fetchProfile();\n\n              case 12:\n                responseProfile = _context.sent;\n\n                //check whether success get profile\n                if (responseProfile.status == 200) {\n                  this.loading = false;\n                  console.log('authenticated from api login'); //check redirect parameter in url\n\n                  if (this.$route.query.redirect != null) {\n                    this.$router.push(this.$route.query.redirect);\n                  } else {\n                    //check if user is admin\n                    if (responseProfile.data.data.role.id == 1) {\n                      this.$router.push('admin');\n                    } else {\n                      this.$router.push('user');\n                    }\n                  }\n                } else {\n                  //failed get profile\n                  this.loading = false;\n                  console.log('gagal fetch profile,status selain 200');\n                  this.errorMessage = responseProfile.data;\n                }\n\n                _context.next = 19;\n                break;\n\n              case 16:\n                //failed get token\n                this.loading = false;\n                console.log('Failed fetch JWT');\n                this.errorMessage = responseJWT.data;\n\n              case 19:\n                _context.next = 23;\n                break;\n\n              case 21:\n                //failed contact server\n                this.loading = false;\n                this.errorMessage = 'Connection Error';\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login() {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }(),\n    logout: function logout() {\n      var removeAuth = this.removeAuth();\n\n      if (removeAuth) {\n        console.log('logged out');\n      }\n    },\n    getAllDevices: function getAllDevices() {\n      ax.getDevice().then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  })\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h3>Form Login</h3>\n    <p>\n      <label for=\"selectUsername\">Pilih username :</label>\n      <select\n        name=\"selectUsername\"\n        id=\"selectUsername\"\n        v-model=\"username\"\n        :disabled=\"loggedIn == 1\"\n        @change=\"onChange\"\n      >\n        <option :value=\"email.admin\">email admin</option>\n        <option :value=\"email.staff\">email staff</option>\n      </select>\n    </p>\n    <form>\n      <input type=\"text\" v-model=\"username\" :disabled=\"loggedIn == 1\">\n      <input type=\"password\" v-model=\"password\" :disabled=\"loggedIn == 1\">\n      <button type=\"submit\" @click.prevent=\"login\" :disabled=\"loggedIn == 1\">Login</button>\n      <p>\n        <button type=\"button\" @click.prevent=\"logout\" :disabled=\"loggedIn == 0\">logout</button>\n      </p>\n    </form>\n    <p v-show=\"loading\" id=\"loading\">Loading</p>\n    <p class=\"error\">{{errorMessage}}</p>\n    <hr>\n    <h3 v-if=\"loggedIn\">Status</h3>\n    <div id=\"statusLogin\">\n      <p>\n        <strong>JWT token type</strong>\n        : {{jwt.token_type}}\n      </p>\n      <p>\n        <strong>access token</strong>\n        : {{jwt.access_token}}\n      </p>\n      <p>\n        <strong>expires in</strong>\n        : {{jwt.expires_in}}\n      </p>\n    </div>\n    <hr>\n    <get-all-user v-if=\"loggedIn\" :access_token=\"jwt.access_token\"></get-all-user>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport GetAllUser from '../components/GetAllUser.vue';\nimport ax from '../services/ApiService';\n\nexport default {\n  components: {\n    'get-all-user': GetAllUser\n  },\n  data() {\n    return {\n      // username: \"bgsbla33333@gmail.com\",\n      password: 'bagaskarala',\n      loading: false,\n      email: {\n        admin: 'bgsbla33333@gmail.com',\n        staff: 'bagaskara_staff@gmail.com'\n      },\n      selectedUser: 'bgsbla33333@gmail.com',\n      errorMessage: ''\n    };\n  },\n  computed: {\n    ...mapGetters(['jwt', 'loggedIn']),\n    username: {\n      get: function() {\n        return this.selectedUser;\n      },\n      set: function(val) {\n        this.selectedUser = val;\n      }\n    }\n  },\n\n  methods: {\n    ...mapActions(['fetchJWT', 'fetchProfile', 'removeAuth']),\n\n    onChange(event) {\n      console.log('e target', event.target.value);\n      console.log('this name', this.username);\n    },\n\n    async login() {\n      console.log('logging in');\n      if (this.username == '' || this.password == '') {\n        alert('isi username dan password dahulu');\n        return false;\n      }\n      this.loading = true;\n\n      //fetch JWT\n      const responseJWT = await this.fetchJWT({\n        username: this.username,\n        password: this.password\n      });\n\n      //error handling\n      if (responseJWT != null) {\n        //check whether success login\n        if (responseJWT.status == 200) {\n          //fetch profile after got JWT\n          const responseProfile = await this.fetchProfile();\n          //check whether success get profile\n          if (responseProfile.status == 200) {\n            this.loading = false;\n            console.log('authenticated from api login');\n            //check redirect parameter in url\n            if (this.$route.query.redirect != null) {\n              this.$router.push(this.$route.query.redirect);\n            } else {\n              //check if user is admin\n              if (responseProfile.data.data.role.id == 1) {\n                this.$router.push('admin');\n              } else {\n                this.$router.push('user');\n              }\n            }\n          } else {\n            //failed get profile\n            this.loading = false;\n            console.log('gagal fetch profile,status selain 200');\n            this.errorMessage = responseProfile.data;\n          }\n        } else {\n          //failed get token\n          this.loading = false;\n          console.log('Failed fetch JWT');\n          this.errorMessage = responseJWT.data;\n        }\n      } else {\n        //failed contact server\n        this.loading = false;\n        this.errorMessage = 'Connection Error';\n      }\n    },\n\n    logout() {\n      const removeAuth = this.removeAuth();\n      if (removeAuth) {\n        console.log('logged out');\n      }\n    },\n\n    getAllDevices() {\n      ax.getDevice()\n        .then(function(response) {\n          console.log(response);\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    }\n  }\n};\n</script>\n<style scoped>\n.error {\n  background-color: red;\n  padding: 10px;\n  color: white;\n}\n#statusLogin {\n  background-color: lightgreen;\n  padding: 10px;\n  margin: 10px;\n}\n#loading {\n  color: crimson;\n  font-weight: bolder;\n}\n</style>\n"],"sourceRoot":"src/views"}]}