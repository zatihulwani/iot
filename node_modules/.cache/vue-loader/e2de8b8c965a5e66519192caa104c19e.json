{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/contoh/src/views/Admin.vue?vue&type=template&id=54c38a05&scoped=true&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/src/views/Admin.vue","mtime":1554002966000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"h1\", [_vm._v(\"Add New User\")]),\n    _c(\"form\", [\n      _c(\"p\", [\n        _c(\"label\", { attrs: { for: \"name\" } }, [_vm._v(\"name\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.name,\n              expression: \"name\"\n            }\n          ],\n          attrs: { type: \"text\", name: \"name\" },\n          domProps: { value: _vm.name },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.name = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"p\", [\n        _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"email\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.email,\n              expression: \"email\"\n            }\n          ],\n          attrs: { type: \"text\", name: \"email\" },\n          domProps: { value: _vm.email },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.email = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"p\", [\n        _c(\"label\", { attrs: { for: \"password\" } }, [_vm._v(\"password\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.password,\n              expression: \"password\"\n            }\n          ],\n          attrs: { type: \"password\", name: \"password\" },\n          domProps: { value: _vm.password },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.password = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"p\", [\n        _c(\"label\", { attrs: { for: \"password-confirmation\" } }, [\n          _vm._v(\"password confirmation\")\n        ]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.passwordConfirm,\n              expression: \"passwordConfirm\"\n            }\n          ],\n          attrs: { type: \"password\", name: \"passwordConfirm\" },\n          domProps: { value: _vm.passwordConfirm },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.passwordConfirm = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"p\", [\n        _c(\"label\", { attrs: { for: \"role_id\" } }, [\n          _vm._v(\"Pilih username :\")\n        ]),\n        _c(\n          \"select\",\n          {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.roleId,\n                expression: \"roleId\"\n              }\n            ],\n            attrs: { name: \"role_id\", id: \"role_id\" },\n            on: {\n              change: function($event) {\n                var $$selectedVal = Array.prototype.filter\n                  .call($event.target.options, function(o) {\n                    return o.selected\n                  })\n                  .map(function(o) {\n                    var val = \"_value\" in o ? o._value : o.value\n                    return val\n                  })\n                _vm.roleId = $event.target.multiple\n                  ? $$selectedVal\n                  : $$selectedVal[0]\n              }\n            }\n          },\n          _vm._l(_vm.role, function(item) {\n            return _c(\n              \"option\",\n              { key: item.id, domProps: { value: item.id } },\n              [_vm._v(_vm._s(item.name))]\n            )\n          }),\n          0\n        )\n      ])\n    ]),\n    _c(\n      \"button\",\n      {\n        attrs: { type: \"submit\", disabled: _vm.loading == 1 },\n        on: {\n          click: function($event) {\n            $event.preventDefault()\n            return _vm.submitData($event)\n          }\n        }\n      },\n      [_vm._v(\"submit data\")]\n    ),\n    _c(\n      \"button\",\n      {\n        attrs: { type: \"button\" },\n        on: {\n          click: function($event) {\n            $event.preventDefault()\n            return _vm.hapusjwtvuex($event)\n          }\n        }\n      },\n      [_vm._v(\"hapus jwt vuex\")]\n    ),\n    _vm.submitted ? _c(\"p\", [_vm._v(_vm._s(_vm.msg))]) : _vm._e(),\n    _c(\n      \"div\",\n      _vm._l(_vm.errValidation, function(er, index) {\n        return _c(\n          \"div\",\n          { key: index },\n          _vm._l(er, function(e, i) {\n            return _c(\"p\", { key: i, staticClass: \"error-validation\" }, [\n              _vm._v(_vm._s(e))\n            ])\n          }),\n          0\n        )\n      }),\n      0\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}