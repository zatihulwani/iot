{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/contoh/src/views/Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/src/views/Admin.vue","mtime":1554002966000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/contoh/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ax from '../services/ApiService';\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      role: '',\n      roleId: 1,\n      submitted: false,\n      msg: '',\n      loading: false,\n      errValidation: ''\n    };\n  },\n  computed: {\n    ...mapGetters(['jwt'])\n  },\n  methods: {\n    hapusjwtvuex() {\n      this.$store.dispatch('removeAuth');\n    },\n    async submitData() {\n      try {\n        this.loading = true;\n        const getDataRoles = await ax.postUser({\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          password_confirmation: this.passwordConfirm,\n          role_id: this.roleId\n        });\n        if (getDataRoles.status == 201) {\n          this.role = getDataRoles.data.data;\n          this.submitted = true;\n          this.msg = 'Success add new user';\n          this.loading = false;\n          this.errValidation = null;\n        }\n      } catch (error) {\n        this.submitted = true;\n        if (error.response.status == 404) {\n          var errMsg = 'Not found';\n        } else {\n          console.log(error.response);\n          errMsg = `${error.response.data.message}`;\n          this.errValidation = error.response.data.errors;\n        }\n        this.msg = `failed - ${errMsg}`;\n        this.loading = false;\n      }\n    }\n  },\n  async created() {\n    try {\n      const getDataRoles = await ax.getRole();\n      if (getDataRoles.status == 200) {\n        this.role = getDataRoles.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    // this.selected = this.role.find(i => i.id === this.selected);\n  }\n};\n",{"version":3,"sources":["Admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Admin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h1>Add New User</h1>\n    <form>\n      <p>\n        <label for=\"name\">name</label>\n        <input type=\"text\" name=\"name\" v-model=\"name\">\n      </p>\n      <p>\n        <label for=\"email\">email</label>\n        <input type=\"text\" name=\"email\" v-model=\"email\">\n      </p>\n      <p>\n        <label for=\"password\">password</label>\n        <input type=\"password\" name=\"password\" v-model=\"password\">\n      </p>\n      <p>\n        <label for=\"password-confirmation\">password confirmation</label>\n        <input type=\"password\" name=\"passwordConfirm\" v-model=\"passwordConfirm\">\n      </p>\n      <p>\n        <label for=\"role_id\">Pilih username :</label>\n        <select name=\"role_id\" id=\"role_id\" v-model=\"roleId\">\n          <option v-for=\"item in role\" :value=\"item.id\" :key=\"item.id\">{{ item.name }}</option>\n        </select>\n      </p>\n    </form>\n    <button type=\"submit\" @click.prevent=\"submitData\" :disabled=\"loading == 1\">submit data</button>\n    <button type=\"button\" @click.prevent=\"hapusjwtvuex\">hapus jwt vuex</button>\n    <p v-if=\"submitted\">{{msg}}</p>\n    <div>\n      <div v-for=\"(er, index) in errValidation\" :key=\"index\">\n        <p v-for=\"(e, i) in er\" :key=\"i\" class=\"error-validation\">{{e}}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ax from '../services/ApiService';\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      role: '',\n      roleId: 1,\n      submitted: false,\n      msg: '',\n      loading: false,\n      errValidation: ''\n    };\n  },\n  computed: {\n    ...mapGetters(['jwt'])\n  },\n  methods: {\n    hapusjwtvuex() {\n      this.$store.dispatch('removeAuth');\n    },\n    async submitData() {\n      try {\n        this.loading = true;\n        const getDataRoles = await ax.postUser({\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          password_confirmation: this.passwordConfirm,\n          role_id: this.roleId\n        });\n        if (getDataRoles.status == 201) {\n          this.role = getDataRoles.data.data;\n          this.submitted = true;\n          this.msg = 'Success add new user';\n          this.loading = false;\n          this.errValidation = null;\n        }\n      } catch (error) {\n        this.submitted = true;\n        if (error.response.status == 404) {\n          var errMsg = 'Not found';\n        } else {\n          console.log(error.response);\n          errMsg = `${error.response.data.message}`;\n          this.errValidation = error.response.data.errors;\n        }\n        this.msg = `failed - ${errMsg}`;\n        this.loading = false;\n      }\n    }\n  },\n  async created() {\n    try {\n      const getDataRoles = await ax.getRole();\n      if (getDataRoles.status == 200) {\n        this.role = getDataRoles.data.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    // this.selected = this.role.find(i => i.id === this.selected);\n  }\n};\n</script>\n\n<style scoped>\n.error-validation {\n  color: red;\n  padding: 10px;\n  margin: 5px;\n  display: inline-block;\n}\n</style>\n"]}]}